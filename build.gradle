plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.6.RELEASE'
    id 'com.gradle.build-scan' version '2.1'
    id 'org.sonarqube' version '2.6'
}

ext {
    springBootVersion = '2.1.2.RELEASE'
    main = 'com.differz.bc.Application'
}

bootJar {
    mainClassName = "${main}"
}

jar {
    mainClassName = "${main}"
    archiveBaseName.set('bc')
}

group = 'com.differz'
version = '1.0'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    jcenter()
    mavenCentral()
    maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

    runtime 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'

    implementation "io.springfox:springfox-spring-webmvc:$swaggerVersion"
    implementation "io.springfox:springfox-swagger-ui:${swaggerVersion}"
    implementation("io.springfox:springfox-swagger2:${swaggerVersion}") {
        exclude module: 'mapstruct'
    }

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    implementation "org.zalando:problem-spring-web:${zalando_problem_version}"

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit'
    }
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "org.junit.jupiter:junit-jupiter-params"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    testImplementation "org.mockito:mockito-junit-jupiter"
    testRuntimeOnly 'com.h2database:h2'
    testCompileOnly "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"
    testImplementation "org.mapstruct:mapstruct:${mapstructVersion}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testImplementation "org.zalando:problem-spring-web:${zalando_problem_version}"
}

compileJava {
    options.compilerArgs = [
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.unmappedTargetPolicy=ERROR'
    ]
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}
